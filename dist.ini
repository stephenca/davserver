name = HTTP::DAV::Server
version = 1.000000
author = Stephen Cardie <devteam@connected-uk.com>
copyright_holder = Connected UK LLP
copyright_year = 2011
license = Perl_5

; choose files to include
[GatherDir]         ; everything under top dir
exclude_filename = README.pod   ; skip this generated file
exclude_filename = META.json    ; skip this generated file

[PruneCruft]        ; default stuff to skip
[ManifestSkip]      ; if -f MANIFEST.SKIP, skip those, too

; file modifications
[OurPkgVersion]     ; add $VERSION = ... to all files
[InsertCopyright]   ; add copyright at "# COPYRIGHT"
[PodWeaver]         ; generate Pod

; generated files
[License]           ; boilerplate license
[ReadmeFromPod]     ; from Pod (runs after PodWeaver)
[ReadmeAnyFromPod]  ; create README.pod in repo directory
type = markdown
filename = README.md
location = root

; t tests
[Test::Compile]      ; make sure .pm files all compile
fake_home = 1       ; fakes $ENV{HOME} just in case

; xt tests
[MetaTests]         ; xt/release/meta-yaml.t
;[PodSyntaxTests]    ; xt/release/pod-syntax.t
;[PodCoverageTests]  ; xt/release/pod-coverage.t
;[Test::Portability]  ; xt/release/portability.t (of file name)
[Test::Version]     ; xt/release/test-version.t
[CheckExtraTests]
[CheckChangesHasContent]
[TestRelease]
[FakeRelease] ; only need this to allow 'dzil release' to work
user = STEPHENCA

; metadata
[AutoPrereqs]       ; find prereqs from code
[MinimumPerl]       ; determine minimum perl version

[MetaNoIndex]       ; sets 'no_index' in META
directory = t
directory = xt
directory = examples
directory = corpus
package = DB        ; just in case

[Bugtracker]        ; defaults to RT

[MetaProvides::Package] ; add 'provides' to META files
meta_noindex = 1        ; respect prior no_index directives

[MetaYAML]          ; generate META.yml (v1.4)
[MetaJSON]          ; generate META.json (v2)

; build system
[ExecDir]           ; include 'bin/*' as executables
[ShareDir]          ; include 'share/' for File::ShareDir
[MakeMaker]         ; create Makefile.PL

; manifest (after all generated files)
[Manifest]          ; create MANIFEST

; copy META.json back to repo dis
[CopyFilesFromBuild]
copy = META.json

; Releaser plugins
;[TestRelease]
